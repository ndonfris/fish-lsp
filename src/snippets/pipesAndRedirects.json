[ 
  {
    "name": ">",
    "description" : "To write standard output to a file, use >DESTINATION"
  }, 
  {
    "name": ">>",
    "description" : "To append standard output to a file, use >>DESTINATION"
  },
  {
    "name": "2>",
    "description": "To write standard error to a file, use 2>DESTINATION"
  },
  {
    "name": "2>>",
    "description": "To write append standard error to a file, use 2>>DESTINATION"
  },
  {
    "name": "<",
    "description": "To write standard input from a file, use <SOURCE_FILE"
  },
  {
    "name": ">?",
    "description": "To not overwrite (“clobber”) an existing file, use >?DESTINATION or 2>?DESTINATION. This is known as the “noclobber” redirection."
  },
  {
    "name": "1>?", 
    "description": "To not overwrite (“clobber”) an existing file, use >?DESTINATION or 1>?DESTINATION. This is known as the “noclobber” redirection."
  },
  {
    "name": "2>?",
    "description": "To not overwrite (“clobber”) an existing file, use >?DESTINATION or 2>?DESTINATION. This is known as the “noclobber” redirection"
  },
  {
    "name": "&-",
    "description": "An ampersand followed by a minus sign (&-). The file descriptor will be closed." 
  },
  {
    "name": "|",
    "description": "Pipe one stream with another. Usually standard output of one command will be piped to standard input of another. OUTPUT | INPUT"
  },
  {
    "name": "&",
    "description": "Disown output . OUTPUT &"
  },
  {
    "name": "&>",
    "description": "the redirection &> can be used to direct both stdout and stderr to the same destination"
  },
  {
    "name": "2>|",
    "description": "pipe a different output file descriptor by prepending its FD number and the output redirect symbol to the pipe"
  },
  {
    "name": "&|",
    "description": "the redirection &| can be used to direct both stdout and stderr to the same destination"
  },
  {
    "name": "2>&1",
    "description": "Redirect both stderr and stdout"
  },
  {
    "name": "&2",
    "description": "An ampersand (&) followed by the number of another file descriptor like &2 for standard error. The output will be written to the destination descriptor."
  },
  {
    "name": ">&2",
    "description": "When you say >&2, that will redirect stdout to where stderr is pointing to at that time."
  }
]
