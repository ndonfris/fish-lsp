[
  {
    "name": "fish_lsp_enabled_handlers",
    "description": "Enables the fish-lsp handlers. By default, all handlers are enabled.",
    "shortDescription": "server handlers to enable",
    "exactMatchOptions": true,
    "options": [
      "complete",
      "hover",
      "rename",
      "definition",
      "implementation",
      "reference",
      "logger",
      "formatting",
      "formatRange",
      "typeFormatting",
      "codeAction",
      "codeLens",
      "folding",
      "signature",
      "executeCommand",
      "inlayHint",
      "highlight",
      "diagnostic",
      "popups"
    ],
    "defaultValue": [],
    "valueType": "array"
  },
  {
    "name": "fish_lsp_disabled_handlers",
    "description": "Disables the fish-lsp handlers. By default, no handlers are disabled.",
    "shortDescription": "server handlers to disable",
    "exactMatchOptions": true,
    "options": [
      "complete",
      "hover",
      "rename",
      "definition",
      "implementation",
      "reference",
      "logger",
      "formatting",
      "formatRange",
      "typeFormatting",
      "codeAction",
      "codeLens",
      "folding",
      "signature",
      "executeCommand",
      "inlayHint",
      "highlight",
      "diagnostic",
      "popups"
    ],
    "defaultValue": [],
    "valueType": "array"
  },
  {
    "name": "fish_lsp_commit_characters",
    "description": "Array of the completion expansion characters.\n\nSingle letter values only.\n\nCommit characters are used to select completion items, as shortcuts.",
    "shortDescription": "commit characters that select completion items",
    "exactMatchOptions": false,
    "options": [
      ".",
      ",",
      ";",
      ":",
      "(",
      ")",
      "[",
      "]",
      "{",
      "}",
      "<",
      ">",
      "'",
      "\"",
      "=",
      "+",
      "-",
      "/",
      "\\",
      "|",
      "&",
      "%",
      "$",
      "#",
      "@",
      "!",
      "?",
      "*",
      "^",
      "`",
      "~",
      "\\t",
      " "
    ],
    "defaultValue": [
      "\\t",
      ";",
      " "
    ],
    "valueType": "array"
  },
  {
    "name": "fish_lsp_log_file",
    "description": "A path to the fish-lsp's logging file. Empty string disables logging.",
    "shortDescription": "path to the fish-lsp's log file",
    "exactMatchOptions": false,
    "options": [
      "/tmp/fish_lsp.logs",
      "~/path/to/fish_lsp/logs.txt"
    ],
    "defaultValue": "",
    "valueType": "string"
  },
  {
    "name": "fish_lsp_logfile",
    "description": "DEPRECATED. USE `fish_lsp_log_file` instead.\n\nPath to the logging file.",
    "shortDescription": "path to the fish-lsp's log file",
    "isDeprecated": true,
    "exactMatchOptions": false,
    "options": [
      "/tmp/fish_lsp.logs",
      "~/path/to/fish_lsp/logs.txt"
    ],
    "defaultValue": "",
    "valueType": "string"
  },
  {
    "name": "fish_lsp_log_level",
    "description": "The logging severity level for displaying messages in the log file.",
    "shortDescription": "minimum log level to include in the log file",
    "exactMatchOptions": true,
    "options": [
      "debug",
      "info",
      "warning",
      "error",
      "log"
    ],
    "defaultValue": "",
    "valueType": "string"
  },
  {
    "name": "fish_lsp_all_indexed_paths",
    "description": "The fish file paths to include in the fish-lsp's startup indexing, as workspaces.\n\nOrder matters (usually place `$__fish_config_dir` before `$__fish_data_dir`).",
    "shortDescription": "directories that the server should always index on startup",
    "exactMatchOptions": false,
    "options": [
      "$HOME/.config/fish",
      "/usr/share/fish",
      "$__fish_config_dir",
      "$__fish_data_dir"
    ],
    "defaultValue": [
      "$__fish_config_dir",
      "$__fish_data_dir"
    ],
    "valueType": "array"
  },
  {
    "name": "fish_lsp_modifiable_paths",
    "description": "The fish file paths, for workspaces where global symbols can be renamed by the user.",
    "shortDescription": "indexed paths that can be modified",
    "exactMatchOptions": false,
    "options": [
      "/usr/share/fish",
      "$HOME/.config/fish",
      "$__fish_data_dir",
      "$__fish_config_dir"
    ],
    "defaultValue": [
      "$__fish_config_dir"
    ],
    "valueType": "array"
  },
  {
    "name": "fish_lsp_diagnostic_disable_error_codes",
    "description": "The diagnostics error codes to disable from the fish-lsp's diagnostics.",
    "shortDescription": "diagnostic codes to disable",
    "exactMatchOptions": true,
    "options": [
      1001,
      1002,
      1003,
      1004,
      1005,
      2001,
      2002,
      2003,
      2004,
      3001,
      3002,
      3003,
      4001,
      4002,
      4003,
      4004,
      4005,
      4006,
      4007,
      4008,
      5001,
      5555,
      6001,
      8001,
      9999
    ],
    "defaultValue": [],
    "valueType": "array"
  },
  {
    "name": "fish_lsp_enable_experimental_diagnostics",
    "description": "Enables the experimental diagnostics feature, using `fish --no-execute`.\n\nThis feature will enable the diagnostic error code 9999 (disabled by default).",
    "shortDescription": "enable fish-lsp's experimental diagnostics",
    "exactMatchOptions": true,
    "options": [
      true,
      false
    ],
    "defaultValue": false,
    "valueType": "boolean"
  },
  {
    "name": "fish_lsp_strict_conditional_command_warnings",
    "description": "Diagnostic `3002` includes/excludes conditionally chained commands to explicitly check existence.\n\nENABLED EXAMPLE: `command -q ls && command ls || echo 'no ls'`\n\nDISABLED EXAMPLE: `command ls || echo 'no ls'`",
    "shortDescription": "diagnostic `3002` show warnings for syntax like `command ls || echo 'no ls'`",
    "exactMatchOptions": true,
    "options": [
      true,
      false
    ],
    "defaultValue": false,
    "valueType": "boolean"
  },
  {
    "name": "fish_lsp_prefer_builtin_fish_commands",
    "description": "Show diagnostic `2004` which warns the user when they are using a recognized external command that can be replaced by an equivalent fish builtin command.",
    "shortDescription": "prefer built-in fish commands over external shell commands",
    "exactMatchOptions": true,
    "options": [
      true,
      false
    ],
    "defaultValue": false,
    "valueType": "boolean"
  },
  {
    "name": "fish_lsp_allow_fish_wrapper_functions",
    "description": "Show warnings when `alias`, `export`, etc... are used instead of their equivalent fish builtin commands.\n\nSome commands will provide quick-fixes to convert this diagnostic to its equivalent fish command.\n\nDiagnostic `2002` is shown when this setting is false, and hidden when true.",
    "shortDescription": "prefer the user to use primitive fish commands instead of wrapper utilities common in other shells",
    "exactMatchOptions": true,
    "options": [
      true,
      false
    ],
    "defaultValue": true,
    "valueType": "boolean"
  },
    {
    "name": "fish_lsp_require_autoloaded_functions_to_have_description",
    "description": "Show warning diagnostic `4008` when an autoloaded function definition does not have a description `function -d/--description '...'; end;`",
    "shortDescription": "enable showing diagnostic `4008`",
    "exactMatchOptions": true,
    "options": [
      true,
      false
    ],
    "defaultValue": true,
    "valueType": "boolean"
  },
  {
    "name": "fish_lsp_max_background_files",
    "description": "The maximum number of background files to read into buffer on startup.",
    "shortDescription": "maximum number of files to analyze in the background on startup",
    "exactMatchOptions": false,
    "options": [
      100,
      250,
      500,
      1000,
      5000,
      10000
    ],
    "defaultValue": 10000,
    "valueType": "number"
  },
  {
    "name": "fish_lsp_show_client_popups",
    "description": "Should the client receive pop-up window notification requests from the fish-lsp server?",
    "shortDescription": "send `connection/window/*` requests in the server",
    "exactMatchOptions": true,
    "options": [
      true,
      false
    ],
    "defaultValue": false,
    "valueType": "boolean"
  },
  {
    "name": "fish_lsp_single_workspace_support",
    "description": "Try to limit the fish-lsp's workspace searching to only the current workspace open.",
    "shortDescription": "limit workspace searching to only the current workspace",
    "exactMatchOptions": true,
    "options": [
      true,
      false
    ],
    "defaultValue": false,
    "valueType": "boolean"
  },
  {
    "name": "fish_lsp_ignore_paths",
    "description": "Glob paths to never search when indexing their parent folder",
    "shortDescription": "paths to ignore when indexing",
    "exactMatchOptions": false,
    "options": [
      "**/.git/**",
      "**/node_modules/**",
      "**/vendor/**",
      "**/__pycache__/**",
      "**/docker/**",
      "**/containerized/**",
      "**/*.log",
      "**/tmp/**"
    ],
    "defaultValue": [
      "**/.git/**",
      "**/node_modules/**",
      "**/containerized/**",
      "**/docker/**"
    ],
    "valueType": "array"
  },
  {
    "name": "fish_lsp_max_workspace_depth",
    "description": "The maximum depth for the lsp to search when starting up.",
    "shortDescription": "maximum directory depth to search for fish files on startup",
    "exactMatchOptions": false,
    "options": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      15,
      20
    ],
    "defaultValue": 5,
    "valueType": "number"
  }
]
